// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	RegisterParameters
	RegisterResults
	UnregisterResults
	ListenParameters
	ListenResults
	CommunicateParameters
	CommunicateResults
	ConnectParameters
	ConnectResults
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterParameters struct {
	Key       string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	AuthToken string `protobuf:"bytes,2,opt,name=AuthToken" json:"AuthToken,omitempty"`
}

func (m *RegisterParameters) Reset()                    { *m = RegisterParameters{} }
func (m *RegisterParameters) String() string            { return proto.CompactTextString(m) }
func (*RegisterParameters) ProtoMessage()               {}
func (*RegisterParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegisterParameters) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RegisterParameters) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

type RegisterResults struct {
	Token  string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	MaxAge int64  `protobuf:"varint,2,opt,name=MaxAge" json:"MaxAge,omitempty"`
}

func (m *RegisterResults) Reset()                    { *m = RegisterResults{} }
func (m *RegisterResults) String() string            { return proto.CompactTextString(m) }
func (*RegisterResults) ProtoMessage()               {}
func (*RegisterResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisterResults) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RegisterResults) GetMaxAge() int64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

type UnregisterResults struct {
}

func (m *UnregisterResults) Reset()                    { *m = UnregisterResults{} }
func (m *UnregisterResults) String() string            { return proto.CompactTextString(m) }
func (*UnregisterResults) ProtoMessage()               {}
func (*UnregisterResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ListenParameters struct {
	Key   string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
}

func (m *ListenParameters) Reset()                    { *m = ListenParameters{} }
func (m *ListenParameters) String() string            { return proto.CompactTextString(m) }
func (*ListenParameters) ProtoMessage()               {}
func (*ListenParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListenParameters) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ListenParameters) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ListenResults struct {
	Identifier  string `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier,omitempty"`
	MaxMessages int32  `protobuf:"varint,2,opt,name=MaxMessages" json:"MaxMessages,omitempty"`
	MaxLength   int32  `protobuf:"varint,3,opt,name=MaxLength" json:"MaxLength,omitempty"`
	Timelimit   string `protobuf:"bytes,4,opt,name=Timelimit" json:"Timelimit,omitempty"`
}

func (m *ListenResults) Reset()                    { *m = ListenResults{} }
func (m *ListenResults) String() string            { return proto.CompactTextString(m) }
func (*ListenResults) ProtoMessage()               {}
func (*ListenResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListenResults) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ListenResults) GetMaxMessages() int32 {
	if m != nil {
		return m.MaxMessages
	}
	return 0
}

func (m *ListenResults) GetMaxLength() int32 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *ListenResults) GetTimelimit() string {
	if m != nil {
		return m.Timelimit
	}
	return ""
}

type CommunicateParameters struct {
	// Types that are valid to be assigned to Param:
	//	*CommunicateParameters_Identifier
	//	*CommunicateParameters_Message
	Param isCommunicateParameters_Param `protobuf_oneof:"param"`
}

func (m *CommunicateParameters) Reset()                    { *m = CommunicateParameters{} }
func (m *CommunicateParameters) String() string            { return proto.CompactTextString(m) }
func (*CommunicateParameters) ProtoMessage()               {}
func (*CommunicateParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type isCommunicateParameters_Param interface {
	isCommunicateParameters_Param()
}

type CommunicateParameters_Identifier struct {
	Identifier string `protobuf:"bytes,1,opt,name=Identifier,oneof"`
}
type CommunicateParameters_Message struct {
	Message string `protobuf:"bytes,2,opt,name=Message,oneof"`
}

func (*CommunicateParameters_Identifier) isCommunicateParameters_Param() {}
func (*CommunicateParameters_Message) isCommunicateParameters_Param()    {}

func (m *CommunicateParameters) GetParam() isCommunicateParameters_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *CommunicateParameters) GetIdentifier() string {
	if x, ok := m.GetParam().(*CommunicateParameters_Identifier); ok {
		return x.Identifier
	}
	return ""
}

func (m *CommunicateParameters) GetMessage() string {
	if x, ok := m.GetParam().(*CommunicateParameters_Message); ok {
		return x.Message
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CommunicateParameters) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CommunicateParameters_OneofMarshaler, _CommunicateParameters_OneofUnmarshaler, _CommunicateParameters_OneofSizer, []interface{}{
		(*CommunicateParameters_Identifier)(nil),
		(*CommunicateParameters_Message)(nil),
	}
}

func _CommunicateParameters_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CommunicateParameters)
	// param
	switch x := m.Param.(type) {
	case *CommunicateParameters_Identifier:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Identifier)
	case *CommunicateParameters_Message:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Message)
	case nil:
	default:
		return fmt.Errorf("CommunicateParameters.Param has unexpected type %T", x)
	}
	return nil
}

func _CommunicateParameters_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CommunicateParameters)
	switch tag {
	case 1: // param.Identifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Param = &CommunicateParameters_Identifier{x}
		return true, err
	case 2: // param.Message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Param = &CommunicateParameters_Message{x}
		return true, err
	default:
		return false, nil
	}
}

func _CommunicateParameters_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CommunicateParameters)
	// param
	switch x := m.Param.(type) {
	case *CommunicateParameters_Identifier:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Identifier)))
		n += len(x.Identifier)
	case *CommunicateParameters_Message:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Message)))
		n += len(x.Message)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CommunicateResults struct {
	Message      string `protobuf:"bytes,1,opt,name=Message" json:"Message,omitempty"`
	LeftMessages int32  `protobuf:"varint,2,opt,name=LeftMessages" json:"LeftMessages,omitempty"`
}

func (m *CommunicateResults) Reset()                    { *m = CommunicateResults{} }
func (m *CommunicateResults) String() string            { return proto.CompactTextString(m) }
func (*CommunicateResults) ProtoMessage()               {}
func (*CommunicateResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CommunicateResults) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CommunicateResults) GetLeftMessages() int32 {
	if m != nil {
		return m.LeftMessages
	}
	return 0
}

type ConnectParameters struct {
	Key string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *ConnectParameters) Reset()                    { *m = ConnectParameters{} }
func (m *ConnectParameters) String() string            { return proto.CompactTextString(m) }
func (*ConnectParameters) ProtoMessage()               {}
func (*ConnectParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ConnectParameters) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ConnectResults struct {
	Identifier  string `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier,omitempty"`
	MaxMessages int32  `protobuf:"varint,2,opt,name=MaxMessages" json:"MaxMessages,omitempty"`
	MaxLength   int32  `protobuf:"varint,3,opt,name=MaxLength" json:"MaxLength,omitempty"`
	Timelimit   string `protobuf:"bytes,4,opt,name=Timelimit" json:"Timelimit,omitempty"`
}

func (m *ConnectResults) Reset()                    { *m = ConnectResults{} }
func (m *ConnectResults) String() string            { return proto.CompactTextString(m) }
func (*ConnectResults) ProtoMessage()               {}
func (*ConnectResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ConnectResults) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ConnectResults) GetMaxMessages() int32 {
	if m != nil {
		return m.MaxMessages
	}
	return 0
}

func (m *ConnectResults) GetMaxLength() int32 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *ConnectResults) GetTimelimit() string {
	if m != nil {
		return m.Timelimit
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterParameters)(nil), "RegisterParameters")
	proto.RegisterType((*RegisterResults)(nil), "RegisterResults")
	proto.RegisterType((*UnregisterResults)(nil), "UnregisterResults")
	proto.RegisterType((*ListenParameters)(nil), "ListenParameters")
	proto.RegisterType((*ListenResults)(nil), "ListenResults")
	proto.RegisterType((*CommunicateParameters)(nil), "CommunicateParameters")
	proto.RegisterType((*CommunicateResults)(nil), "CommunicateResults")
	proto.RegisterType((*ConnectParameters)(nil), "ConnectParameters")
	proto.RegisterType((*ConnectResults)(nil), "ConnectResults")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Listener service

type ListenerClient interface {
	Register(ctx context.Context, in *RegisterParameters, opts ...grpc.CallOption) (*RegisterResults, error)
	Unregister(ctx context.Context, in *ListenParameters, opts ...grpc.CallOption) (*UnregisterResults, error)
	Listen(ctx context.Context, in *ListenParameters, opts ...grpc.CallOption) (Listener_ListenClient, error)
	Connect(ctx context.Context, in *ConnectParameters, opts ...grpc.CallOption) (*ConnectResults, error)
	Communicate(ctx context.Context, opts ...grpc.CallOption) (Listener_CommunicateClient, error)
}

type listenerClient struct {
	cc *grpc.ClientConn
}

func NewListenerClient(cc *grpc.ClientConn) ListenerClient {
	return &listenerClient{cc}
}

func (c *listenerClient) Register(ctx context.Context, in *RegisterParameters, opts ...grpc.CallOption) (*RegisterResults, error) {
	out := new(RegisterResults)
	err := grpc.Invoke(ctx, "/Listener/Register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listenerClient) Unregister(ctx context.Context, in *ListenParameters, opts ...grpc.CallOption) (*UnregisterResults, error) {
	out := new(UnregisterResults)
	err := grpc.Invoke(ctx, "/Listener/Unregister", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listenerClient) Listen(ctx context.Context, in *ListenParameters, opts ...grpc.CallOption) (Listener_ListenClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Listener_serviceDesc.Streams[0], c.cc, "/Listener/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &listenerListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Listener_ListenClient interface {
	Recv() (*ListenResults, error)
	grpc.ClientStream
}

type listenerListenClient struct {
	grpc.ClientStream
}

func (x *listenerListenClient) Recv() (*ListenResults, error) {
	m := new(ListenResults)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *listenerClient) Connect(ctx context.Context, in *ConnectParameters, opts ...grpc.CallOption) (*ConnectResults, error) {
	out := new(ConnectResults)
	err := grpc.Invoke(ctx, "/Listener/Connect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listenerClient) Communicate(ctx context.Context, opts ...grpc.CallOption) (Listener_CommunicateClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Listener_serviceDesc.Streams[1], c.cc, "/Listener/Communicate", opts...)
	if err != nil {
		return nil, err
	}
	x := &listenerCommunicateClient{stream}
	return x, nil
}

type Listener_CommunicateClient interface {
	Send(*CommunicateParameters) error
	Recv() (*CommunicateResults, error)
	grpc.ClientStream
}

type listenerCommunicateClient struct {
	grpc.ClientStream
}

func (x *listenerCommunicateClient) Send(m *CommunicateParameters) error {
	return x.ClientStream.SendMsg(m)
}

func (x *listenerCommunicateClient) Recv() (*CommunicateResults, error) {
	m := new(CommunicateResults)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Listener service

type ListenerServer interface {
	Register(context.Context, *RegisterParameters) (*RegisterResults, error)
	Unregister(context.Context, *ListenParameters) (*UnregisterResults, error)
	Listen(*ListenParameters, Listener_ListenServer) error
	Connect(context.Context, *ConnectParameters) (*ConnectResults, error)
	Communicate(Listener_CommunicateServer) error
}

func RegisterListenerServer(s *grpc.Server, srv ListenerServer) {
	s.RegisterService(&_Listener_serviceDesc, srv)
}

func _Listener_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenerServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Listener/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenerServer).Register(ctx, req.(*RegisterParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _Listener_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenerServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Listener/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenerServer).Unregister(ctx, req.(*ListenParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _Listener_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenParameters)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ListenerServer).Listen(m, &listenerListenServer{stream})
}

type Listener_ListenServer interface {
	Send(*ListenResults) error
	grpc.ServerStream
}

type listenerListenServer struct {
	grpc.ServerStream
}

func (x *listenerListenServer) Send(m *ListenResults) error {
	return x.ServerStream.SendMsg(m)
}

func _Listener_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenerServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Listener/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenerServer).Connect(ctx, req.(*ConnectParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _Listener_Communicate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ListenerServer).Communicate(&listenerCommunicateServer{stream})
}

type Listener_CommunicateServer interface {
	Send(*CommunicateResults) error
	Recv() (*CommunicateParameters, error)
	grpc.ServerStream
}

type listenerCommunicateServer struct {
	grpc.ServerStream
}

func (x *listenerCommunicateServer) Send(m *CommunicateResults) error {
	return x.ServerStream.SendMsg(m)
}

func (x *listenerCommunicateServer) Recv() (*CommunicateParameters, error) {
	m := new(CommunicateParameters)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Listener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Listener",
	HandlerType: (*ListenerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Listener_Register_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _Listener_Unregister_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _Listener_Connect_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _Listener_Listen_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Communicate",
			Handler:       _Listener_Communicate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0x4d, 0xaf, 0xd2, 0x40,
	0x14, 0x7d, 0x05, 0x81, 0xc7, 0x7d, 0xfa, 0x1e, 0x5c, 0xf4, 0xa5, 0x69, 0x8c, 0x21, 0x93, 0x98,
	0xbc, 0x8d, 0x13, 0x94, 0x9d, 0x0b, 0x0d, 0xe2, 0x02, 0x23, 0x4d, 0x4c, 0x83, 0x5b, 0x93, 0x11,
	0x2f, 0x65, 0x22, 0x9d, 0x92, 0x76, 0x48, 0xf0, 0x47, 0x68, 0xe2, 0x3f, 0x36, 0xed, 0xb4, 0xf4,
	0x8b, 0xb0, 0x76, 0xd7, 0x39, 0x73, 0xef, 0x99, 0x7b, 0xce, 0x3d, 0x85, 0xbe, 0xd8, 0x4b, 0xbe,
	0x8f, 0x42, 0x1d, 0xb2, 0x8f, 0x80, 0x1e, 0xf9, 0x32, 0xd6, 0x14, 0x7d, 0x11, 0x91, 0x08, 0x48,
	0x53, 0x14, 0xe3, 0x00, 0xda, 0x9f, 0xe9, 0x97, 0x6d, 0x8d, 0xad, 0x87, 0xbe, 0x97, 0x7c, 0xe2,
	0x73, 0xe8, 0xcf, 0x0e, 0x7a, 0xbb, 0x0a, 0x7f, 0x92, 0xb2, 0x5b, 0x29, 0x5e, 0x00, 0xec, 0x3d,
	0xdc, 0xe5, 0x2c, 0x1e, 0xc5, 0x87, 0x9d, 0x8e, 0xf1, 0x29, 0x74, 0x4c, 0xb1, 0x21, 0x31, 0x07,
	0xbc, 0x87, 0xae, 0x2b, 0x8e, 0x33, 0x9f, 0x52, 0x8e, 0xb6, 0x97, 0x9d, 0xd8, 0x08, 0x86, 0x5f,
	0x55, 0x54, 0xa5, 0x60, 0x6f, 0x61, 0xb0, 0x4c, 0x00, 0x75, 0x71, 0xb2, 0xd3, 0x43, 0xad, 0xd2,
	0x43, 0xec, 0xb7, 0x05, 0x4f, 0x4c, 0x73, 0x3e, 0xd0, 0x0b, 0x80, 0x4f, 0x3f, 0x48, 0x69, 0xb9,
	0x91, 0x14, 0x65, 0x04, 0x25, 0x04, 0xc7, 0x70, 0xe3, 0x8a, 0xa3, 0x4b, 0x71, 0x2c, 0x7c, 0x8a,
	0x53, 0xb6, 0x8e, 0x57, 0x86, 0x12, 0x0f, 0x5c, 0x71, 0x5c, 0x92, 0xf2, 0xf5, 0xd6, 0x6e, 0xa7,
	0xf7, 0x05, 0x90, 0xdc, 0xae, 0x64, 0x40, 0x3b, 0x19, 0x48, 0x6d, 0x3f, 0x32, 0x0e, 0x9d, 0x00,
	0xf6, 0x0d, 0x9e, 0xcd, 0xc3, 0x20, 0x38, 0x28, 0xb9, 0x16, 0x9a, 0x4a, 0x82, 0xc6, 0xcd, 0xb1,
	0x16, 0x57, 0x95, 0xc1, 0x1c, 0xe8, 0x65, 0x23, 0x18, 0x89, 0x8b, 0x2b, 0x2f, 0x07, 0x3e, 0xf4,
	0xa0, 0xb3, 0x4f, 0xb8, 0x98, 0x07, 0x58, 0xe2, 0xcf, 0x35, 0xdb, 0x45, 0xab, 0x11, 0x9c, 0x1f,
	0x91, 0xc1, 0xe3, 0x25, 0x6d, 0x74, 0x4d, 0x6e, 0x05, 0x63, 0x2f, 0x61, 0x38, 0x0f, 0x95, 0xa2,
	0xb5, 0xbe, 0xb4, 0x00, 0xf6, 0xc7, 0x82, 0xdb, 0xac, 0xee, 0xbf, 0xf0, 0xfa, 0xcd, 0xdf, 0x16,
	0x5c, 0x9b, 0xdd, 0x53, 0x84, 0xaf, 0xe1, 0x3a, 0x8f, 0x26, 0x8e, 0x78, 0x33, 0xeb, 0xce, 0x80,
	0xd7, 0xa3, 0x3b, 0x05, 0x28, 0xc2, 0x88, 0x43, 0x5e, 0x0f, 0xa1, 0x83, 0xbc, 0x11, 0x56, 0x7c,
	0x05, 0x5d, 0x53, 0x77, 0xae, 0xe1, 0x96, 0x57, 0xb2, 0x38, 0xb1, 0x90, 0x43, 0x2f, 0xf3, 0x0c,
	0x91, 0x37, 0x5c, 0x76, 0xee, 0x78, 0xcd, 0xd1, 0x77, 0x70, 0x53, 0xda, 0x2f, 0xde, 0xf3, 0xb3,
	0x69, 0x72, 0x46, 0xbc, 0x99, 0x82, 0x07, 0x6b, 0x62, 0x7d, 0xef, 0xa6, 0xbf, 0xfb, 0xf4, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x77, 0xd7, 0xac, 0xfb, 0x03, 0x00, 0x00,
}
